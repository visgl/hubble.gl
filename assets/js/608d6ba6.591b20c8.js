"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[424],{9870:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"README","title":"Introduction","description":"Hubble.gl is a JavaScript library for animating and video encoding WebGL data visualizations.","source":"@site/../docs/README.md","sourceDirName":".","slug":"/","permalink":"/docs/","draft":false,"unlisted":false,"editUrl":"https://github.com/visgl/hubble.gl/tree/master/docs/../docs/README.md","tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","next":{"title":"Whats New","permalink":"/docs/whats-new"}}');var i=t(4848),s=t(8453);const a={},o="Introduction",c={},l=[{value:"Flavors",id:"flavors",level:2},{value:"Script Tag",id:"script-tag",level:3},{value:"NPM Module",id:"npm-module",level:3},{value:"Pure JS",id:"pure-js",level:4},{value:"React",id:"react",level:4},{value:"Basic Animation",id:"basic-animation",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,i.jsx)(n.p,{children:"Hubble.gl is a JavaScript library for animating and video encoding WebGL data visualizations."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"High Quality Video:"})," 60+fps framerates, up to 8k resolution, and a variety of formats. Render a quick draft or with loseless encoding. Fine tune timing and look with keyframe markers and render everything in the same app."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Easy Integration:"})," Define animations for deck.gl or kepler.gl features, then render videos. Integrate with React UI components to interact with animation and rendering settings."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Client Side Library:"})," Videos render and encode directly in the web browser. User data never leaves their machine. Since nothing runs on a server, sites can scale without computation costs."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"flavors",children:"Flavors"}),"\n",(0,i.jsx)(n.h3,{id:"script-tag",children:"Script Tag"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'<script src="https://unpkg.com/hubble.gl@latest/dist.min.js"><\/script>\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/visgl/hubble.gl/tree/master/examples/standalone",children:"Standalone example"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"npm-module",children:"NPM Module"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"npm install hubble.gl\n"})}),"\n",(0,i.jsx)(n.h4,{id:"pure-js",children:"Pure JS"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/visgl/hubble.gl/tree/master/examples/get-started/pure-js",children:"Pure JS example"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"react",children:"React"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/visgl/hubble.gl/tree/master/examples/website/camera",children:"Get started"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/visgl/hubble.gl/tree/master/examples/website/trips",children:"With basemap"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"basic-animation",children:"Basic Animation"}),"\n",(0,i.jsxs)(n.p,{children:["To create an animation and render it you will need to first create a ",(0,i.jsx)(n.a,{href:"https://deck.gl/docs/get-started/getting-started",children:"deck.gl"})," project. Then create a ",(0,i.jsx)(n.code,{children:"DeckAnimation"}),", a ",(0,i.jsx)(n.code,{children:"timecode"})," object, and define some keyframes (e.g. ",(0,i.jsx)(n.code,{children:"cameraKeyframes"}),")"]}),"\n",(0,i.jsxs)(n.p,{children:["Hubble.gl provide a ",(0,i.jsx)(n.code,{children:"useNextFrame"})," hook for React.js to trigger a render when necessary, and provides the ",(0,i.jsx)(n.code,{children:"<BasicControls/>"})," component for convenience to get your animation started."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"import React, {useState, useRef, useMemo} from 'react';\nimport DeckGL from '@deck.gl/react';\nimport {useNextFrame, BasicControls} from '@hubble.gl/react';\nimport {LineLayer} from '@deck.gl/layers';\nimport {DeckAnimation} from 'hubble.gl';\nimport {easeInOut} from 'popmotion';\n\nconst deckAnimation = new DeckAnimation({\n  // Use applyLayerKeyframes to spread keyframe values onto layers by id.\n  getLayers: (a) => a.applyLayerKeyframes([\n    new LineLayer({\n      id: 'line-layer', \n      data: [{sourcePosition: [-122.41669, 37.7853], targetPosition: [-122.41669, 37.781]}]\n    })\n  ]),\n  layerKeyframes: [\n    { \n      id: 'line-layer',  \n      timings: [0, 1000], \n      keyframes: [{opacity: 0}, {opacity: 1}] \n    }\n  ],\n  cameraKeyframe: {\n    timings: [0, 5000], // ms\n    keyframes: [\n      {\n        latitude: 37.7853,\n        longitude: -122.41669,\n        zoom: 11.5,\n        bearing: 140,\n        pitch: 60\n      },\n      {\n        latitude: 37.7853,\n        longitude: -122.41669,\n        zoom: 11.5,\n        bearing: 0,\n        pitch: 30\n      }\n    ],\n    easings: easeInOut // any easing number => number function is supported\n  }\n});\n\nconst timecode = {\n  start: 0,      // ms\n  end: 5000,     // ms\n  framerate: 30\n}\n\nconst resolution = {\n  width: 1920,  // px\n  height: 1080  // px\n}\n\nexport default function App() {\n  const deckRef = useRef(null);\n  const deck = useMemo(() => deckRef.current && deckRef.current.deck, [deckRef.current]);\n  const [busy, setBusy] = useState(false);\n  const nextFrame = useNextFrame();\n\n  const {adapter, layers, cameraFrame, setCameraFrame} = useDeckAdapter(deckAnimation);\n  \n  return (\n    <div style={{position: 'relative'}}>\n      <DeckGL\n        ref={deckRef}\n        viewState={cameraFrame}\n        onViewStateChange={({viewState}) => setCameraFrame(viewState)}\n        width={resolution.width}\n        height={resolution.height}\n        {...adapter.getProps({deck, nextFrame})}\n      />\n      <div style={{position: 'absolute'}}>\n        <BasicControls \n          adapter={adapter}\n          busy={busy}\n          setBusy={setBusy}\n          formatConfigs={formatConfigs}\n          timecode={timecode}\n        />\n      </div>\n    </div>\n  );\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(6540);const i={},s=r.createContext(i);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);