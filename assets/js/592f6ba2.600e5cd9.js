"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[900],{4802:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>t});const d=JSON.parse('{"id":"api-reference/deck-adapter","title":"DeckAdapter","description":"Constructor","source":"@site/../docs/api-reference/deck-adapter.md","sourceDirName":"api-reference","slug":"/api-reference/deck-adapter","permalink":"/docs/api-reference/deck-adapter","draft":false,"unlisted":false,"editUrl":"https://github.com/visgl/hubble.gl/tree/master/docs/../docs/api-reference/deck-adapter.md","tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Post Processing Workflow","permalink":"/docs/post-processing"},"next":{"title":"AnimationManager","permalink":"/docs/api-reference/animations/animation-manager"}}');var o=r(4848),s=r(8453);const i={},c="DeckAdapter",l={},t=[{value:"Constructor",id:"constructor",level:2},{value:"Parameters",id:"parameters",level:2},{value:"<code>animationManager</code> (<code>AnimationManager</code>, Optional)",id:"animationmanager-animationmanager-optional",level:5},{value:"<code>glContext</code> (<code>WebGlContext</code>, Optional)",id:"glcontext-webglcontext-optional",level:5},{value:"Methods",id:"methods",level:2},{value:"<code>getProps({deck, onNextFrame, extraProps}): props</code>",id:"getpropsdeck-onnextframe-extraprops-props",level:5},{value:"<code>render({Encoder, formatConfigs, filename, timecode, onStopped, onSave, onComplete})</code>",id:"renderencoder-formatconfigs-filename-timecode-onstopped-onsave-oncomplete",level:5},{value:"<code>stop({onStopped, onSave, onComplete}})</code>",id:"stoponstopped-onsave-oncomplete",level:5},{value:"<code>seek({timeMs})</code>",id:"seektimems",level:5},{value:"<code>onAfterRender(proceedToNextFrame, readyToCapture)</code>",id:"onafterrenderproceedtonextframe-readytocapture",level:5},{value:"Source",id:"source",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h5:"h5",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"deckadapter",children:"DeckAdapter"})}),"\n",(0,o.jsx)(n.h2,{id:"constructor",children:"Constructor"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"new DeckAdapter({animationManager, glContext});\n"})}),"\n",(0,o.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsxs)(n.h5,{id:"animationmanager-animationmanager-optional",children:[(0,o.jsx)(n.code,{children:"animationManager"})," (",(0,o.jsx)(n.code,{children:"AnimationManager"}),", Optional)"]}),"\n",(0,o.jsxs)(n.p,{children:["See ",(0,o.jsx)(n.a,{href:"/docs/api-reference/animations/animation-manager",children:"AnimationManager"})," for more information."]}),"\n",(0,o.jsxs)(n.h5,{id:"glcontext-webglcontext-optional",children:[(0,o.jsx)(n.code,{children:"glContext"})," (",(0,o.jsx)(n.code,{children:"WebGlContext"}),", Optional)"]}),"\n",(0,o.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,o.jsx)(n.h5,{id:"getpropsdeck-onnextframe-extraprops-props",children:(0,o.jsx)(n.code,{children:"getProps({deck, onNextFrame, extraProps}): props"})}),"\n",(0,o.jsx)(n.p,{children:"Supplies deck.gl properties from hubble.gl."}),"\n",(0,o.jsx)(n.p,{children:"Parameters:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"deck"})," (",(0,o.jsx)(n.code,{children:"Deck"}),") - ",(0,o.jsx)(n.code,{children:"deck"})," object from deck.gl."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"onNextFrame"})," (",(0,o.jsx)(n.code,{children:"(nextTimeMs: number) => void"}),", Optional) - Callback indicating the next frame in a rendering should be displayed."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"extraProps"})," (",(0,o.jsx)(n.code,{children:"DeckGlProps"}),", Optional) - Apply extra props to deckgl. Note: Hubble will override props as needed."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h5,{id:"renderencoder-formatconfigs-filename-timecode-onstopped-onsave-oncomplete",children:(0,o.jsx)(n.code,{children:"render({Encoder, formatConfigs, filename, timecode, onStopped, onSave, onComplete})"})}),"\n",(0,o.jsx)(n.p,{children:"Start rendering."}),"\n",(0,o.jsx)(n.p,{children:"Parameters:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsxs)(n.strong,{children:[(0,o.jsx)(n.code,{children:"Encoder"})," (",(0,o.jsx)(n.code,{children:"typeof FrameEncoder"}),", Optional) - Default: ",(0,o.jsx)(n.code,{children:"PreviewEncoder"}),"."]})}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Provide a FrameEncoder class for capturing deck canvas. See ",(0,o.jsx)(n.a,{href:"/docs/api-reference/encoder",children:"Encoders Overview"})," for options."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsxs)(n.strong,{children:[(0,o.jsx)(n.code,{children:"formatConfigs"})," (",(0,o.jsx)(n.code,{children:"Object"}),", Optional) - Default: ",(0,o.jsx)(n.code,{children:"{}"}),"."]})}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["See ",(0,o.jsx)(n.a,{href:"/docs/api-reference/encoder/frame-encoder#constructor-1",children:"FrameEncoder"})," for internal defaults."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsxs)(n.strong,{children:[(0,o.jsx)(n.code,{children:"timecode"})," (",(0,o.jsx)(n.code,{children:"{start: number, end: number, framerate: number}"}),")"]})}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"The start and end time in milliseconds to render, as well as a framerate."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsxs)(n.strong,{children:[(0,o.jsx)(n.code,{children:"filename"})," (",(0,o.jsx)(n.code,{children:"string"}),", Optional) - Default: UUID."]})}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"The video filename."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsxs)(n.strong,{children:[(0,o.jsx)(n.code,{children:"onStopped"})," (",(0,o.jsx)(n.code,{children:"() => void"}),", Optional) - Default: ",(0,o.jsx)(n.code,{children:"undefined"}),"."]})}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Called when recording has stopped, and before saving is complete. This does not get called when a render is interrupted with ",(0,o.jsx)(n.code,{children:"stop()"}),"."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsxs)(n.strong,{children:[(0,o.jsx)(n.code,{children:"onSave"})," (",(0,o.jsx)(n.code,{children:"(blob: Blob) => void"}),", Optional) - Default: ",(0,o.jsx)(n.code,{children:"undefined"}),"."]})}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Override the save function. By default a file will be downloaded using the given ",(0,o.jsx)(n.code,{children:"filename"}),", and encoder's extension. This does not get called when a render is interrupted with ",(0,o.jsx)(n.code,{children:"stop()"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["You may also access the download function with ",(0,o.jsx)(n.code,{children:"adapter.videoCapture.download(blob)"}),"."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsxs)(n.strong,{children:[(0,o.jsx)(n.code,{children:"onComplete"})," (",(0,o.jsx)(n.code,{children:"() => void"}),", Optional) - Default: ",(0,o.jsx)(n.code,{children:"undefined"}),"."]})}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Called when rendering and saving is finished. This does not get called when a render is interrupted with ",(0,o.jsx)(n.code,{children:"stop()"}),"."]}),"\n",(0,o.jsx)(n.h5,{id:"stoponstopped-onsave-oncomplete",children:(0,o.jsx)(n.code,{children:"stop({onStopped, onSave, onComplete}})"})}),"\n",(0,o.jsx)(n.p,{children:"Interrupt rendering and saves partial result. This is useful for handling user interruptions."}),"\n",(0,o.jsx)(n.p,{children:"Parameters:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsxs)(n.strong,{children:[(0,o.jsx)(n.code,{children:"onStopped"})," (",(0,o.jsx)(n.code,{children:"() => void"}),", Optional) - Default: ",(0,o.jsx)(n.code,{children:"undefined"}),"."]})}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Called when recording has stopped, and before saving is complete."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsxs)(n.strong,{children:[(0,o.jsx)(n.code,{children:"onSave"})," (",(0,o.jsx)(n.code,{children:"(blob: Blob) => void"}),", Optional) - Default: ",(0,o.jsx)(n.code,{children:"undefined"}),"."]})}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Override the save function. By default a file will be downloaded using the given ",(0,o.jsx)(n.code,{children:"filename"}),", and encoder's extension."]}),"\n",(0,o.jsxs)(n.p,{children:["You may also access the download function with ",(0,o.jsx)(n.code,{children:"adapter.videoCapture.download(blob)"}),"."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsxs)(n.strong,{children:[(0,o.jsx)(n.code,{children:"onComplete"})," (",(0,o.jsx)(n.code,{children:"() => void"}),", Optional) - Default: ",(0,o.jsx)(n.code,{children:"undefined"}),"."]})}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Called when rendering and saving is finished."}),"\n",(0,o.jsx)(n.h5,{id:"seektimems",children:(0,o.jsx)(n.code,{children:"seek({timeMs})"})}),"\n",(0,o.jsx)(n.p,{children:"Move time to set a new position. Useful for peeking at different times in an animation without rendering."}),"\n",(0,o.jsx)(n.p,{children:"Parameters:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsxs)(n.strong,{children:[(0,o.jsx)(n.code,{children:"timeMs"})," (",(0,o.jsx)(n.code,{children:"number"}),")"]})}),"\n"]}),"\n",(0,o.jsx)(n.h5,{id:"onafterrenderproceedtonextframe-readytocapture",children:(0,o.jsx)(n.code,{children:"onAfterRender(proceedToNextFrame, readyToCapture)"})}),"\n",(0,o.jsxs)(n.p,{children:["Call this every time a render/draw cycle has completed. This will trigger a frame capture once all flags are ",(0,o.jsx)(n.code,{children:"true"}),", and the callback ",(0,o.jsx)(n.code,{children:"proceedToNextFrame"})," when the next frame should be drawn."]}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Flags"}),(0,o.jsx)(n.th,{children:"Description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"readyToCapture"}),(0,o.jsx)(n.td,{children:"Wait for external loading or interaction to complete."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"isRecording"}),(0,o.jsx)(n.td,{children:"Internal. Only capture when recording frames."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"areAllLayersLoaded"}),(0,o.jsx)(n.td,{children:"Internal. Wait for all deck.gl async layers (e.g. tiles) to be loaded."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"isNotCapturing"}),(0,o.jsx)(n.td,{children:"Internal. Don't capture while already encoding a frame."})]})]})]}),"\n",(0,o.jsx)(n.p,{children:"Parameters:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsxs)(n.strong,{children:[(0,o.jsx)(n.code,{children:"proceedToNextFrame"})," (",(0,o.jsx)(n.code,{children:"(nextTimeMs: number) => void"}),")"]})," - Callback when next frame should draw."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsxs)(n.strong,{children:[(0,o.jsx)(n.code,{children:"readyToCapture"})," (",(0,o.jsx)(n.code,{children:"boolean"}),", Optional) - Default: ",(0,o.jsx)(n.code,{children:"true"}),"."]})," - Delay capturing for any reason (e.g. async operations). Note: The application must call ",(0,o.jsx)(n.code,{children:"onAfterRender"})," after ",(0,o.jsx)(n.code,{children:"readyToCapture"})," is ",(0,o.jsx)(n.code,{children:"true"}),", or else the render will not progress to the next frame."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"source",children:"Source"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://github.com/visgl/hubble.gl/tree/1.4-release/modules/core/src/adapters/deck-adapter.ts",children:"modules/core/src/adapters/deck-adapter.ts"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>c});var d=r(6540);const o={},s=d.createContext(o);function i(e){const n=d.useContext(s);return d.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),d.createElement(s.Provider,{value:n},e.children)}}}]);